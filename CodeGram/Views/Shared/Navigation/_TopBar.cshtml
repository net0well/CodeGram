@inject UserManager<User> UserManager
@{
    var loggedInUser = await UserManager.GetUserAsync(User);
    var userName = loggedInUser?.UserName;
    var fullName = loggedInUser?.FullName;
    var profilePictureUrl = loggedInUser?.ProfilePictureUrl;
}

<header class="z-[100] h-[--m-top] fixed top-0 left-0 w-full flex items-center bg-white backdrop-blur-xl border-b border-gray-200 shadow-sm transition-all duration-500">
    <div class="2xl:w-[--w-side] lg:w-[--w-side-sm]">
        <div class="flex items-center gap-1">
            <button uk-toggle="target: #site__sidebar ; cls :!-translate-x-0"
                    class="flex items-center justify-center w-10 h-10 text-xl rounded-full hover:bg-gray-100 xl:hidden group transition-all duration-300 text-black ml-2">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6 group-aria-expanded:hidden">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="hidden w-6 h-6 group-aria-expanded:block">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <div id="logo" class="flex items-center ml-2">
                <a asp-controller="Home" asp-action="Index" class="flex items-center group">
                    <img src="https://i.ibb.co/CqbjK7D/Green-Modern-Marketing-Logo-removebg-preview.png"
                         alt="Logo"
                         class="h-12 w-auto object-contain transition-transform duration-300 group-hover:scale-105" />
                </a>
            </div>
        </div>
    </div>

    <div class="flex-1 relative flex justify-center">
        <div class="max-w-[1220px] w-full flex justify-start items-center pl-5 md:pl-16 lg:pl-28">
            <form id="search--box" class="2xl:w-[650px] xl:w-[550px] lg:w-[450px] md:w-[400px] sm:w-[350px] w-[90%] rounded-full overflow-hidden z-20 bg-white/90 border border-gray-300 max-md:hidden transition-all duration-300 hover:border-indigo-300">
                <div class="flex items-center h-full w-full">
                    <div class="pl-4 pr-1">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5 text-gray-500">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
                        </svg>
                    </div>
                    <input type="text" name="query" placeholder="Buscar posts, amigos, códigos..." class="w-full py-2 px-2 !bg-transparent h-11 !text-sm text-black rounded-full focus:outline-none placeholder-gray-500 border-0" />
                </div>
            </form>

            <div class="ml-4 max-w-md overflow-hidden hidden lg:block">
                <div id="anime-quotes" class="text-gray-600 italic text-sm font-medium relative h-6">
                    <div class="quote-slide absolute inset-0 flex items-center">
                        <span class="font-bold text-purple-700">Naruto:</span> Trabalho duro é inútil para aqueles que não acreditam em si mesmos.
                    </div>
                </div>
            </div>
        </div>

        <div class="max-w-[1220px] mx-auto flex items-center">
            <div class="flex items-center sm:gap-4 gap-2 absolute right-5 top-1/2 -translate-y-1/2">

                <!-- Botão de Notificações -->
                <div class="relative">
                    <button type="button" id="notificationsBtn"
                            class="group sm:p-3 p-2 rounded-xl relative hover:bg-slate-50/80 transition-all duration-300 border border-transparent hover:border-slate-200/60 hover:shadow-sm">

                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                             class="w-6 h-6 text-slate-600 group-hover:text-indigo-600 transition-all duration-300">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                        </svg>

                        <!-- Contador -->
                        <span id="notificationsCount"
                              class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold w-5 h-5 flex items-center justify-center rounded-full hidden">
                            0
                        </span>
                    </button>

                    <!-- Modal de Notificações -->
                    <div id="notificationModal" class="hidden absolute top-full right-0 mt-2 bg-white rounded-lg drop-shadow-xl w-80 border border-gray-200 z-50">
                        <div class="p-4 py-3 flex items-center gap-4 bg-gray-100 border-b border-gray-200">
                            <h3 class="font-bold text-lg text-black flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                     class="w-5 h-5 mr-2 text-indigo-600">
                                    <path stroke-linecap="round" stroke-linejoin="round"
                                          d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0" />
                                </svg>
                                Notificações
                            </h3>
                        </div>

                        <div class="text-sm h-[400px] w-full overflow-y-auto">
                            <div class="p-3" id="notification-dropdown">
                                <div class="flex items-center justify-center h-32 text-center text-gray-500">
                                    <div>
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                             class="w-10 h-10 mx-auto mb-3 text-indigo-300">
                                            <path stroke-linecap="round" stroke-linejoin="round"
                                                  d="M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z" />
                                        </svg>
                                        <p>Não há notificações no momento</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Profile Dropdown -->
                <div class="rounded-lg overflow-hidden relative bg-white cursor-pointer shrink-0 hover:ring-2 hover:ring-indigo-300 transition-all duration-300 border border-gray-200"
                     uk-toggle="target: #profileDropdown">
                    <img src="@(string.IsNullOrEmpty(profilePictureUrl) ? Url.Content("~/images/avatar/user.png") : profilePictureUrl)"
                         class="sm:w-10 sm:h-10 w-9 h-9 rounded-lg shadow-sm shrink-0 object-cover" />
                </div>

                <div id="profileDropdown" class="hidden bg-white rounded-lg drop-shadow-xl w-64 border border-gray-200"
                     uk-drop="offset:6;pos: bottom-right;animate-out: true;">
                    <div class="p-4 py-3 flex items-center gap-4 bg-gray-100 border-b border-gray-200">
                        <img src="@(string.IsNullOrEmpty(profilePictureUrl) ? Url.Content("~/images/avatar/user.png") : profilePictureUrl)"
                             class="w-10 h-10 rounded-lg shadow-sm object-cover border border-gray-300" />
                        <div class="flex-1">
                            <h4 class="text-sm font-medium text-black">@fullName</h4>
                            <div class="text-xs mt-1 text-indigo-600 font-light">@userName</div>
                        </div>
                    </div>
                    <nav class="p-1">
                        <a asp-controller="Settings" asp-action="Index"
                           class="flex items-center gap-3 hover:bg-indigo-50 p-2.5 px-3 rounded-md transition-all duration-300 text-gray-700">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                 class="w-5 h-5 text-indigo-600">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z" />
                                <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                            Minha Conta
                        </a>
                        <a asp-controller="Authentication" asp-action="Logout"
                           class="flex items-center gap-3 hover:bg-indigo-50 p-2.5 px-3 rounded-md transition-all duration-300 text-gray-700 mt-1">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                 class="w-5 h-5 text-red-500">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9" />
                            </svg>
                            Sair
                        </a>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</header>

<script src="https://cdnjs.cloudflare.com/ajax/libs/aspnet-signalr/1.0.27/signalr.min.js" integrity="sha512-a+73ErrZPjhqOu0qbW1QLsenEF4pvDjmnd+Ws6hkDyJlrwAigOQAxQhIT+fPNFWScUvtJQvn+G535TT2C6/G4g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const notificationsBtn = document.getElementById("notificationsBtn");
        const notificationsCount = document.getElementById("notificationsCount");
        const notificationModal = document.getElementById("notificationModal");
        const notificationDropdown = document.getElementById("notification-dropdown");

        let currentCount = 0;
        let isModalOpen = false;

        // Função para atualizar o contador
        function updateNotificationCount(count) {
            currentCount = count;

            if (count > 0) {
                notificationsCount.textContent = count > 99 ? '99+' : count;
                notificationsCount.classList.remove('hidden');
            } else {
                notificationsCount.classList.add('hidden');
            }
        }

        // Função para carregar notificações
        function loadNotifications() {
            fetch("/Notifications/GetNotifications")
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    console.log("HTML recebido:", html);
                    notificationDropdown.innerHTML = html;
                })
                .catch(error => {
                    console.error("Erro ao carregar notificações:", error);
                    notificationDropdown.innerHTML = `
                                <div class="flex items-center justify-center h-32 text-center text-red-500">
                                    <div>
                                        <p>Erro ao carregar notificações</p>
                                        <button onclick="loadNotifications()" class="mt-2 text-sm text-indigo-600 hover:underline">
                                            Tentar novamente
                                        </button>
                                    </div>
                                </div>
                            `;
                });
        }

        // Função para mostrar/esconder o modal
        function toggleModal() {
            if (isModalOpen) {
                notificationModal.classList.add('hidden');
                isModalOpen = false;
            } else {
                notificationModal.classList.remove('hidden');
                isModalOpen = true;
                loadNotifications();

                // Zerar contador após um pequeno delay
                setTimeout(() => {
                    updateNotificationCount(0);
                }, 300);
            }
        }

        // Buscar contagem inicial
        fetch("/Notifications/GetCount")
            .then(response => response.json())
            .then(count => {
                console.log("Contagem inicial:", count);
                updateNotificationCount(count);
            })
            .catch(error => {
                console.error("Erro ao buscar contagem:", error);
            });

        // Event listener para o botão de notificações
        notificationsBtn.addEventListener('click', function (event) {
            event.stopPropagation();
            console.log("Botão clicado, alternando modal...");
            toggleModal();
        });

        // Fechar modal quando clicar fora dele
        document.addEventListener('click', function (event) {
            if (isModalOpen && !notificationModal.contains(event.target) && !notificationsBtn.contains(event.target)) {
                notificationModal.classList.add('hidden');
                isModalOpen = false;
            }
        });


        // Configurar SignalR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("ReceiveNotification", function (message) {
            console.log("Nova notificação via SignalR:", message);
            updateNotificationCount(currentCount + 1);
        });

        connection.start()
            .then(() => {
                console.log("SignalR conectado com sucesso");
            })
            .catch(error => {
                console.error("Erro ao conectar SignalR:", error);
            });

        // Tornar a função loadNotifications global para o botão de retry
        window.loadNotifications = loadNotifications;
    });

    function setNotificationAsRead(notificationId) {
            console.log("Mark as read ", notificationId);
        fetch(`Notifications/SetNotificationAsRead?notificationId=${notificationId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    notificationId: notificationId
                })
            })
                .then(resp => resp.text())
                .then(html => {
                    document.getElementById('notification-dropdown').innerHTML = html;
                })
                .catch(error => {
                    console.error('Erro ao marcar notificação como lida:', error);
                });
        }
</script>

<style>
    /* Estilo para o contador de notificações */
    #notificationsCount {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
        transition: all 0.3s ease;
    }

        #notificationsCount:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
        }

    /* Melhorar o scroll das notificações */
    #notification-dropdown {
        scrollbar-width: thin;
        scrollbar-color: #cbd5e1 #f1f5f9;
    }

        #notification-dropdown::-webkit-scrollbar {
            width: 6px;
        }

        #notification-dropdown::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }

        #notification-dropdown::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
        }

            #notification-dropdown::-webkit-scrollbar-thumb:hover {
                background: #94a3b8;
            }

    /* Estilo para o botão de notificações quando há notificações */
    #notificationsBtn.has-notifications {
        background: rgba(239, 68, 68, 0.1);
        border-color: rgba(239, 68, 68, 0.2);
    }

    /* Transições suaves */
    .transition-all {
        transition: all 0.3s ease;
    }

    /* Garantir que o modal apareça por cima de outros elementos */
    #notificationModal {
        z-index: 1000;
    }
</style>